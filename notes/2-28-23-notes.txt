;; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.


so, tomorrow:
- check those 1e7 runs with higher timestep. stitch together and fit. just do this instead of checkign dt table for now.
- so these sucked.

NOW: create a "check_mean_force.py" on the cluster that reads in a trjaectory and generates the energy fn. Then averages.
for both the 1e7 and 2e7 with diff timesteps, check the mean force for implicit diff.

LATER: neighbor lists.

could maybe do some quick profiling

MAX stuff

NEXT: get potimization going. remeber that we'll probably want to jit it!






also need to check float64

start stuff for (i) dt table, (ii) neighbor list, and (iii) confirming forc is zero for trajectories. Best case is dt table shows 0.1 looks good, neighbor lists really make things faster, and force is 0. Could also do (iv), which is do additional profiling (like maybe pasing around some state, etc. But probably doesn't matter if doing things implicitly.)
- do dt table first. will want to get some sims running for it if it looks decent.
- once we do these three, will want to setup an optimization
  - note that in the optimization, the first step for each force should be an equilibration step. then spawn a bunch of batches
  - note that when doing things implictly, we'll have to decide if we want to jit the actual simulation or not. Will this cause memory issues? Will jitting 1e7 steps actually make it much faster?
  - really can't forget to use different keys...
