;; This buffer is for text that is not saved, and for Lisp evaluation.
;; To create a file, visit it with C-x C-f and enter text in its buffer.

n = 5
mask_val = n

nbrs = [
 [3, 5, 5, 4, 5], # 0
 [...], # 1
 [...], # 2
 [...], # 3
 [...], # 4
]










Things to do:
- Fix neighbor lists per above
  - just do what they do for self mask, but twice! Twice because once per "column" in a nx2 matrix. 2 because each can have at most 2 bonded neighbors
    - DONE!
  - now, just have to test. includes getting the right distance, and maybe sorting out analytically what we expect it to be...
    - redo the energy tests with the appropriately centered thing
      - DONE!
    - then, find the minimum r_cutoff after which we get agreement
      - about 6? 5?
    - then, do some speed profliing on CPU vs. GPU
  - note: optimization wlil be broken on the neighbor branch!!
  - should also test exactly ohw much memoryt hings take
    - profile with Megan tomorrow. Would be great if we can run batches on lower-cost GPUs
- profile with tensorboard
  - do some speed comparisons
  - get normal oxDNAs dr_threshold
- Finish 2x grid search with JAX-DNA
  - and confirm via literature search that we can't do temperature thing. See if Tom talks about this
  - note: running new short set as well as finishing long batch. Directories below.
- also test to see how much batching we can get away (should get some of these running tonight)
  - maybe start at different spots in phase space?
    - can try longer equilibration times to get your walkers further out in phase space
- Get dummy optimization running
- Check longer strand from oxDNA





long, RT
- 0.025: langevin_2023-03-31_22-14-15_n20000000_dt0.005_t296.15_k0
- 0.05: langevin_2023-04-02_14-58-37_n20000000_dt0.005_t296.15_k1
- 0.075: langevin_2023-04-02_14-58-36_n20000000_dt0.005_t296.15_k2
- 0.1: langevin_2023-04-02_15-39-57_n20000000_dt0.005_t296.15_k3
- 0.15: langevin_2023-04-02_19-59-09_n20000000_dt0.005_t296.15_k4
- 0.2: langevin_2023-04-03_20-45-23_n20000000_dt0.005_t296.15_k5
- 0.25: langevin_2023-04-03_20-45-48_n20000000_dt0.005_t296.15_k6
- 0.3: langevin_2023-04-03_20-46-57_n20000000_dt0.005_t296.15_k7
- 0.375: langevin_2023-04-03_20-48-56_n20000000_dt0.005_t296.15_k8

short, RT:
- 0.025: langevin_2023-04-03_20-51-16_n20000000_dt0.005_t296.15_k0
- 0.05: langevin_2023-04-03_20-51-14_n20000000_dt0.005_t296.15_k1
- 0.075: langevin_2023-04-03_20-51-35_n20000000_dt0.005_t296.15_k2
- 0.1: langevin_2023-04-03_20-52-01_n20000000_dt0.005_t296.15_k3
- 0.15: langevin_2023-04-03_20-51-59_n20000000_dt0.005_t296.15_k4
- 0.2: langevin_2023-04-03_20-52-06_n20000000_dt0.005_t296.15_k5
- 0.25: langevin_2023-04-03_20-53-07_n20000000_dt0.005_t296.15_k6
- 0.3: langevin_2023-04-03_20-53-07_n20000000_dt0.005_t296.15_k7
- 0.375: langevin_2023-04-03_20-52-41_n20000000_dt0.005_t296.15_k8


short, RT, batched:
- 0.025:
  1: langevin_2023-04-05_00-04-58_n5000000_dt0.005_t296.15_k0
  2: langevin_2023-04-05_00-05-05_n5000000_dt0.005_t296.15_k1
  3: langevin_2023-04-05_00-05-07_n5000000_dt0.005_t296.15_k2
  4: langevin_2023-04-05_00-05-10_n5000000_dt0.005_t296.15_k3
- 0.05:
  1: langevin_2023-04-05_00-05-34_n5000000_dt0.005_t296.15_k4
  2: langevin_2023-04-05_00-05-27_n5000000_dt0.005_t296.15_k5
  3: langevin_2023-04-05_00-05-13_n5000000_dt0.005_t296.15_k6
  4: langevin_2023-04-05_00-05-13_n5000000_dt0.005_t296.15_k7
- 0.075:
  1: langevin_2023-04-05_00-05-13_n5000000_dt0.005_t296.15_k8
  2: langevin_2023-04-05_00-05-17_n5000000_dt0.005_t296.15_k9
  3: langevin_2023-04-05_00-05-16_n5000000_dt0.005_t296.15_k10
  4: langevin_2023-04-05_00-05-20_n5000000_dt0.005_t296.15_k11
- 0.1:
  1: langevin_2023-04-05_00-05-30_n5000000_dt0.005_t296.15_k12
  2: langevin_2023-04-05_00-05-34_n5000000_dt0.005_t296.15_k13
  3: langevin_2023-04-05_00-05-57_n5000000_dt0.005_t296.15_k14
  4: langevin_2023-04-05_00-05-47_n5000000_dt0.005_t296.15_k15
- 0.15:
  1: langevin_2023-04-05_00-06-29_n5000000_dt0.005_t296.15_k16
  2: langevin_2023-04-05_00-06-21_n5000000_dt0.005_t296.15_k17
  3: langevin_2023-04-05_00-06-21_n5000000_dt0.005_t296.15_k18
  4: langevin_2023-04-05_00-06-55_n5000000_dt0.005_t296.15_k19
- 0.2:
  1: langevin_2023-04-05_00-06-56_n5000000_dt0.005_t296.15_k20
  2: langevin_2023-04-05_00-07-09_n5000000_dt0.005_t296.15_k21
  3: langevin_2023-04-05_00-07-16_n5000000_dt0.005_t296.15_k22
  4: langevin_2023-04-05_00-07-16_n5000000_dt0.005_t296.15_k23
- 0.25:
  1: langevin_2023-04-05_00-07-36_n5000000_dt0.005_t296.15_k24
  2: langevin_2023-04-05_00-07-36_n5000000_dt0.005_t296.15_k25
  3: langevin_2023-04-05_00-06-52_n5000000_dt0.005_t296.15_k26
  4: langevin_2023-04-05_00-06-51_n5000000_dt0.005_t296.15_k27
- 0.3:
  1: langevin_2023-04-05_00-07-40_n5000000_dt0.005_t296.15_k28
  2: langevin_2023-04-05_00-07-44_n5000000_dt0.005_t296.15_k29
  3: langevin_2023-04-05_00-07-54_n5000000_dt0.005_t296.15_k30
  4: langevin_2023-04-05_00-07-55_n5000000_dt0.005_t296.15_k31
- 0.375:
  1: langevin_2023-04-05_00-07-53_n5000000_dt0.005_t296.15_k32
  2: langevin_2023-04-05_00-08-15_n5000000_dt0.005_t296.15_k33
  3: langevin_2023-04-05_00-08-18_n5000000_dt0.005_t296.15_k34
  4: langevin_2023-04-05_00-08-20_n5000000_dt0.005_t296.15_k35




launch some 7e6 and chop off the first 2e6 of each for batching
- running a bunch with 1e7
ALSO -- should test short and short-batched with the perfect value for f=0.05. Will tell us if it's truly a sampling problem at this low force.

- langevin_2023-04-05_16-30-56_n10000000_dt0.005_t296.15_k40
- langevin_2023-04-05_16-31-01_n10000000_dt0.005_t296.15_k41
- langevin_2023-04-05_16-31-01_n10000000_dt0.005_t296.15_k42
- langevin_2023-04-05_16-31-46_n10000000_dt0.005_t296.15_k43
- langevin_2023-04-05_16-31-00_n10000000_dt0.005_t296.15_k44
- langevin_2023-04-05_16-31-19_n10000000_dt0.005_t296.15_k45
- langevin_2023-04-05_16-31-36_n10000000_dt0.005_t296.15_k46
